var searchIndex = [{ty:"mod",name:"",path:"openssl",desc:""},{ty:"mod",name:"ssl",path:"openssl",desc:""},{ty:"struct",name:"SslContext",path:"openssl::ssl",desc:"An SSL context object"},{ty:"struct",name:"X509StoreContext",path:"openssl::ssl",desc:""},{ty:"struct",name:"X509",path:"openssl::ssl",desc:"A public key certificate"},{ty:"struct",name:"X509Name",path:"openssl::ssl",desc:""},{ty:"struct",name:"SslStream",path:"openssl::ssl",desc:"A stream wrapper which handles SSL encryption for an underlying stream."},{ty:"enum",name:"SslMethod",path:"openssl::ssl",desc:"Determines the SSL method supported"},{ty:"variant",name:"Sslv3",path:"openssl::ssl",desc:"Only support the SSLv3 protocol",parent:'1236'},{ty:"variant",name:"Tlsv1",path:"openssl::ssl",desc:"Only support the TLSv1 protocol",parent:'1236'},{ty:"variant",name:"Sslv23",path:"openssl::ssl",desc:"Support the SSLv2, SSLv3 and TLSv1 protocols",parent:'1236'},{ty:"enum",name:"SslVerifyMode",path:"openssl::ssl",desc:"Determines the type of certificate verification used"},{ty:"variant",name:"SslVerifyPeer",path:"openssl::ssl",desc:"Verify that the server's certificate is trusted",parent:'1265'},{ty:"variant",name:"SslVerifyNone",path:"openssl::ssl",desc:"Do not verify the server's certificate",parent:'1265'},{ty:"enum",name:"X509NameFormat",path:"openssl::ssl",desc:""},{ty:"variant",name:"Rfc2253",path:"openssl::ssl",desc:"",parent:'1761'},{ty:"variant",name:"Oneline",path:"openssl::ssl",desc:"",parent:'1761'},{ty:"variant",name:"Multiline",path:"openssl::ssl",desc:"",parent:'1761'},{ty:"enum",name:"X509ValidationError",path:"openssl::ssl",desc:""},{ty:"variant",name:"X509UnableToGetIssuerCert",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToGetCrl",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToDecryptCertSignature",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToDecryptCrlSignature",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToDecodeIssuerPublicKey",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertSignatureFailure",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CrlSignatureFailure",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertNotYetValid",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertHasExpired",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CrlNotYetValid",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CrlHasExpired",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ErrorInCertNotBeforeField",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ErrorInCertNotAfterField",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ErrorInCrlLastUpdateField",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ErrorInCrlNextUpdateField",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509OutOfMem",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509DepthZeroSelfSignedCert",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509SelfSignedCertInChain",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToGetIssuerCertLocally",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToVerifyLeafSignature",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertChainTooLong",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertRevoked",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509InvalidCA",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509PathLengthExceeded",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509InvalidPurpose",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertUntrusted",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CertRejected",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509SubjectIssuerMismatch",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509AkidSkidMismatch",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509AkidIssuerSerialMismatch",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509KeyusageNoCertsign",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnableToGetCrlIssuer",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnhandledCriticalExtension",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509KeyusageNoCrlSign",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnhandledCriticalCrlExtension",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509InvalidNonCA",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ProxyPathLengthExceeded",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509KeyusageNoDigitalSignature",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ProxyCertificatesNotAllowed",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509InvalidExtension",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509InavlidPolicyExtension",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509NoExplicitPolicy",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509DifferentCrlScope",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnsupportedExtensionFeature",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnnestedResource",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509PermittedVolation",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ExcludedViolation",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509SubtreeMinmax",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnsupportedConstraintType",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnsupportedConstraintSyntax",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnsupportedNameSyntax",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509CrlPathValidationError",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509ApplicationVerification",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"variant",name:"X509UnknownError",path:"openssl::ssl",desc:"",parent:'1768'},{ty:"mod",name:"error",path:"openssl::ssl",desc:""},{ty:"enum",name:"SslError",path:"openssl::ssl::error",desc:"An SSL error"},{ty:"variant",name:"StreamEof",path:"openssl::ssl::error",desc:"The underlying stream has reported an EOF",parent:'31'},{ty:"variant",name:"SslSessionClosed",path:"openssl::ssl::error",desc:"The SSL session has been closed by the other end",parent:'31'},{ty:"variant",name:"OpenSslErrors",path:"openssl::ssl::error",desc:"An error in the OpenSSL library",parent:'31'},{ty:"enum",name:"OpensslError",path:"openssl::ssl::error",desc:"An error from the OpenSSL library"},{ty:"variant",name:"UnknownError",path:"openssl::ssl::error",desc:"An unknown error",parent:'86'},{ty:"structfield",name:"library",path:"openssl::ssl::error::OpensslError",desc:"The library reporting the error",parent:'86'},{ty:"structfield",name:"function",path:"openssl::ssl::error::OpensslError",desc:"The function reporting the error",parent:'86'},{ty:"structfield",name:"reason",path:"openssl::ssl::error::OpensslError",desc:"The reason for the error",parent:'86'},{ty:"method",name:"to_str",path:"openssl::ssl::error",desc:"",parent:'31'},{ty:"method",name:"to_str",path:"openssl::ssl::error",desc:"",parent:'86'},{ty:"method",name:"get",path:"openssl::ssl::error",desc:"Creates a new `OpenSslErrors` with the current contents of the error\nstack.",parent:'31'},{ty:"typedef",name:"VerifyCallback",path:"openssl::ssl",desc:"The signature of functions that can be used to manually verify certificates"},{ty:"method",name:"drop",path:"openssl::ssl",desc:"",parent:'1420'},{ty:"method",name:"try_new",path:"openssl::ssl",desc:"Attempts to create a new SSL context.",parent:'1420'},{ty:"method",name:"new",path:"openssl::ssl",desc:"A convenience wrapper around `try_new`.",parent:'1420'},{ty:"method",name:"set_verify",path:"openssl::ssl",desc:"Configures the certificate verification method for new connections.",parent:'1420'},{ty:"method",name:"set_CA_file",path:"openssl::ssl",desc:"Specifies the file that contains trusted CA certificates.",parent:'1420'},{ty:"method",name:"get_error",path:"openssl::ssl",desc:"",parent:'1651'},{ty:"method",name:"get_current_cert",path:"openssl::ssl",desc:"",parent:'1651'},{ty:"method",name:"subject_name",path:"openssl::ssl",desc:"",parent:'1712'},{ty:"method",name:"drop",path:"openssl::ssl",desc:"",parent:'2117'},{ty:"method",name:"from_i64",path:"openssl::ssl",desc:"",parent:'2478'},{ty:"method",name:"from_u64",path:"openssl::ssl",desc:"",parent:'2478'},{ty:"method",name:"drop",path:"openssl::ssl",desc:"",parent:'2797'},{ty:"method",name:"try_new",path:"openssl::ssl",desc:"Attempts to create a new SSL stream",parent:'3047'},{ty:"method",name:"new",path:"openssl::ssl",desc:"A convenience wrapper around `try_new`.",parent:'3047'},{ty:"method",name:"read",path:"openssl::ssl",desc:"",parent:'3047'},{ty:"method",name:"write",path:"openssl::ssl",desc:"",parent:'3047'},{ty:"method",name:"flush",path:"openssl::ssl",desc:"",parent:'3047'},{ty:"mod",name:"crypto",path:"openssl",desc:""},{ty:"mod",name:"hash",path:"openssl::crypto",desc:""},{ty:"struct",name:"Hasher",path:"openssl::crypto::hash",desc:""},{ty:"enum",name:"HashType",path:"openssl::crypto::hash",desc:""},{ty:"variant",name:"MD5",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"variant",name:"SHA1",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"variant",name:"SHA224",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"variant",name:"SHA256",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"variant",name:"SHA384",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"variant",name:"SHA512",path:"openssl::crypto::hash",desc:"",parent:'3527'},{ty:"fn",name:"evpmd",path:"openssl::crypto::hash",desc:""},{ty:"fn",name:"hash",path:"openssl::crypto::hash",desc:"Hashes the supplied input data using hash t, returning the resulting hash\nvalue"},{ty:"typedef",name:"EVP_MD_CTX",path:"openssl::crypto::hash",desc:""},{ty:"typedef",name:"EVP_MD",path:"openssl::crypto::hash",desc:""},{ty:"method",name:"new",path:"openssl::crypto::hash",desc:"",parent:'3662'},{ty:"method",name:"update",path:"openssl::crypto::hash",desc:"Update this hasher with more input bytes",parent:'3662'},{ty:"method",name:"final",path:"openssl::crypto::hash",desc:"Return the digest of all bytes added to this hasher since its last\ninitialization",parent:'3662'},{ty:"method",name:"drop",path:"openssl::crypto::hash",desc:"",parent:'3662'},{ty:"mod",name:"hmac",path:"openssl::crypto",desc:""},{ty:"struct",name:"HMAC_CTX",path:"openssl::crypto::hmac",desc:""},{ty:"structfield",name:"md",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"structfield",name:"md_ctx",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"structfield",name:"i_ctx",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"structfield",name:"o_ctx",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"structfield",name:"key_length",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"structfield",name:"key",path:"openssl::crypto::hmac",desc:"",parent:'3822'},{ty:"struct",name:"HMAC",path:"openssl::crypto::hmac",desc:""},{ty:"fn",name:"HMAC",path:"openssl::crypto::hmac",desc:""},{ty:"method",name:"update",path:"openssl::crypto::hmac",desc:"",parent:'3897'},{ty:"method",name:"final",path:"openssl::crypto::hmac",desc:"",parent:'3897'},{ty:"mod",name:"pkcs5",path:"openssl::crypto",desc:""},{ty:"fn",name:"pbkdf2_hmac_sha1",path:"openssl::crypto::pkcs5",desc:"Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm."},{ty:"mod",name:"pkey",path:"openssl::crypto",desc:""},{ty:"struct",name:"PKey",path:"openssl::crypto::pkey",desc:""},{ty:"enum",name:"Role",path:"openssl::crypto::pkey",desc:"Represents a role an asymmetric key might be appropriate for."},{ty:"variant",name:"Encrypt",path:"openssl::crypto::pkey",desc:"",parent:'4648'},{ty:"variant",name:"Decrypt",path:"openssl::crypto::pkey",desc:"",parent:'4648'},{ty:"variant",name:"Sign",path:"openssl::crypto::pkey",desc:"",parent:'4648'},{ty:"variant",name:"Verify",path:"openssl::crypto::pkey",desc:"",parent:'4648'},{ty:"enum",name:"EncryptionPadding",path:"openssl::crypto::pkey",desc:"Type of encryption padding to use."},{ty:"variant",name:"OAEP",path:"openssl::crypto::pkey",desc:"",parent:'4653'},{ty:"variant",name:"PKCS1v15",path:"openssl::crypto::pkey",desc:"",parent:'4653'},{ty:"typedef",name:"EVP_PKEY",path:"openssl::crypto::pkey",desc:""},{ty:"typedef",name:"RSA",path:"openssl::crypto::pkey",desc:""},{ty:"method",name:"new",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"gen",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"save_pub",path:"openssl::crypto::pkey",desc:"Returns a serialized form of the public key, suitable for load_pub().",parent:'4700'},{ty:"method",name:"load_pub",path:"openssl::crypto::pkey",desc:"Loads a serialized form of the public key, as produced by save_pub().",parent:'4700'},{ty:"method",name:"save_priv",path:"openssl::crypto::pkey",desc:"Returns a serialized form of the public and private keys, suitable for\nload_priv().",parent:'4700'},{ty:"method",name:"load_priv",path:"openssl::crypto::pkey",desc:"Loads a serialized form of the public and private keys, as produced by\nsave_priv().",parent:'4700'},{ty:"method",name:"size",path:"openssl::crypto::pkey",desc:"Returns the size of the public key modulus.",parent:'4700'},{ty:"method",name:"can",path:"openssl::crypto::pkey",desc:"Returns whether this pkey object can perform the specified role.",parent:'4700'},{ty:"method",name:"max_data",path:"openssl::crypto::pkey",desc:"Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",parent:'4700'},{ty:"method",name:"encrypt_with_padding",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"decrypt_with_padding",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"encrypt",path:"openssl::crypto::pkey",desc:"Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",parent:'4700'},{ty:"method",name:"decrypt",path:"openssl::crypto::pkey",desc:"Decrypts data, expecting OAEP padding, returning the decrypted data.",parent:'4700'},{ty:"method",name:"sign",path:"openssl::crypto::pkey",desc:"Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",parent:'4700'},{ty:"method",name:"verify",path:"openssl::crypto::pkey",desc:"Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",parent:'4700'},{ty:"method",name:"sign_with_hash",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"verify_with_hash",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"method",name:"drop",path:"openssl::crypto::pkey",desc:"",parent:'4700'},{ty:"mod",name:"rand",path:"openssl::crypto",desc:""},{ty:"fn",name:"rand_bytes",path:"openssl::crypto::rand",desc:""},{ty:"mod",name:"symm",path:"openssl::crypto",desc:""},{ty:"struct",name:"Crypter",path:"openssl::crypto::symm",desc:"Represents a symmetric cipher context."},{ty:"enum",name:"Mode",path:"openssl::crypto::symm",desc:""},{ty:"variant",name:"Encrypt",path:"openssl::crypto::symm",desc:"",parent:'5910'},{ty:"variant",name:"Decrypt",path:"openssl::crypto::symm",desc:"",parent:'5910'},{ty:"enum",name:"Type",path:"openssl::crypto::symm",desc:""},{ty:"variant",name:"AES_128_ECB",path:"openssl::crypto::symm",desc:"",parent:'5913'},{ty:"variant",name:"AES_128_CBC",path:"openssl::crypto::symm",desc:"",parent:'5913'},{ty:"variant",name:"AES_256_ECB",path:"openssl::crypto::symm",desc:"",parent:'5913'},{ty:"variant",name:"AES_256_CBC",path:"openssl::crypto::symm",desc:"",parent:'5913'},{ty:"variant",name:"RC4_128",path:"openssl::crypto::symm",desc:"",parent:'5913'},{ty:"fn",name:"encrypt",path:"openssl::crypto::symm",desc:"Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data."},{ty:"fn",name:"decrypt",path:"openssl::crypto::symm",desc:"Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data."},{ty:"typedef",name:"EVP_CIPHER_CTX",path:"openssl::crypto::symm",desc:""},{ty:"typedef",name:"EVP_CIPHER",path:"openssl::crypto::symm",desc:""},{ty:"method",name:"new",path:"openssl::crypto::symm",desc:"",parent:'5971'},{ty:"method",name:"pad",path:"openssl::crypto::symm",desc:"Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",parent:'5971'},{ty:"method",name:"init",path:"openssl::crypto::symm",desc:"Initializes this crypter.",parent:'5971'},{ty:"method",name:"update",path:"openssl::crypto::symm",desc:"Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",parent:'5971'},{ty:"method",name:"final",path:"openssl::crypto::symm",desc:"Finish crypting. Returns the remaining partial block of output, if any.",parent:'5971'},{ty:"method",name:"drop",path:"openssl::crypto::symm",desc:"",parent:'5971'}];var allPaths = {'4650':{type:'variant',name:'Decrypt'},'1801':{type:'variant',name:'X509UnhandledCriticalExtension'},'5742':{type:'fn',name:'rand_bytes'},'6376':{type:'fn',name:'encrypt'},'3527':{type:'enum',name:'HashType'},'3531':{type:'variant',name:'SHA256'},'1814':{type:'variant',name:'X509PermittedVolation'},'1808':{type:'variant',name:'X509InvalidExtension'},'1238':{type:'variant',name:'Tlsv1'},'1803':{type:'variant',name:'X509UnhandledCriticalCrlExtension'},'1772':{type:'variant',name:'X509UnableToDecryptCrlSignature'},'5725':{type:'mod',name:'rand'},'1799':{type:'variant',name:'X509KeyusageNoCertsign'},'1770':{type:'variant',name:'X509UnableToGetCrl'},'1817':{type:'variant',name:'X509UnsupportedConstraintType'},'1819':{type:'variant',name:'X509UnsupportedNameSyntax'},'3662':{type:'struct',name:'Hasher'},'3538':{type:'typedef',name:'EVP_MD'},'6437':{type:'fn',name:'decrypt'},'1812':{type:'variant',name:'X509UnsupportedExtensionFeature'},'1763':{type:'variant',name:'Rfc2253'},'1810':{type:'variant',name:'X509NoExplicitPolicy'},'1800':{type:'variant',name:'X509UnableToGetCrlIssuer'},'1825':{type:'variant',name:'X509UnknownError'},'1769':{type:'variant',name:'X509UnableToGetIssuerCert'},'3897':{type:'struct',name:'HMAC'},'1804':{type:'variant',name:'X509InvalidNonCA'},'4653':{type:'enum',name:'EncryptionPadding'},'5916':{type:'variant',name:'AES_256_ECB'},'1790':{type:'variant',name:'X509CertRevoked'},'1820':{type:'variant',name:'X509CrlPathValidationError'},'1776':{type:'variant',name:'X509CertNotYetValid'},'1407':{type:'typedef',name:'VerifyCallback'},'4139':{type:'fn',name:'pbkdf2_hmac_sha1'},'1795':{type:'variant',name:'X509CertRejected'},'1236':{type:'enum',name:'SslMethod'},'1813':{type:'variant',name:'X509UnnestedResource'},'96':{type:'variant',name:'UnknownError'},'1773':{type:'variant',name:'X509UnableToDecodeIssuerPublicKey'},'3822':{type:'struct',name:'HMAC_CTX'},'4654':{type:'variant',name:'OAEP'},'4383':{type:'typedef',name:'RSA'},'1239':{type:'variant',name:'Sslv23'},'1816':{type:'variant',name:'X509SubtreeMinmax'},'5913':{type:'enum',name:'Type'},'1267':{type:'variant',name:'SslVerifyPeer'},'3782':{type:'fn',name:'hash'},'1237':{type:'variant',name:'Sslv3'},'1802':{type:'variant',name:'X509KeyusageNoCrlSign'},'4379':{type:'typedef',name:'EVP_PKEY'},'33':{type:'variant',name:'SslSessionClosed'},'0':{type:'mod',name:'openssl'},'1798':{type:'variant',name:'X509AkidIssuerSerialMismatch'},'1794':{type:'variant',name:'X509CertUntrusted'},'1651':{type:'struct',name:'X509StoreContext'},'5806':{type:'typedef',name:'EVP_CIPHER'},'4649':{type:'variant',name:'Encrypt'},'1768':{type:'enum',name:'X509ValidationError'},'31':{type:'enum',name:'SslError'},'1818':{type:'variant',name:'X509UnsupportedConstraintSyntax'},'1788':{type:'variant',name:'X509UnableToVerifyLeafSignature'},'4652':{type:'variant',name:'Verify'},'1778':{type:'variant',name:'X509CrlNotYetValid'},'1792':{type:'variant',name:'X509PathLengthExceeded'},'1809':{type:'variant',name:'X509InavlidPolicyExtension'},'1420':{type:'struct',name:'SslContext'},'5911':{type:'variant',name:'Encrypt'},'5915':{type:'variant',name:'AES_128_CBC'},'1782':{type:'variant',name:'X509ErrorInCrlLastUpdateField'},'1781':{type:'variant',name:'X509ErrorInCertNotAfterField'},'1265':{type:'enum',name:'SslVerifyMode'},'39':{type:'variant',name:'OpenSslErrors'},'3519':{type:'mod',name:'crypto'},'3813':{type:'mod',name:'hmac'},'4651':{type:'variant',name:'Sign'},'1765':{type:'variant',name:'Oneline'},'1761':{type:'enum',name:'X509NameFormat'},'1786':{type:'variant',name:'X509SelfSignedCertInChain'},'6':{type:'mod',name:'ssl'},'1784':{type:'variant',name:'X509OutOfMem'},'5917':{type:'variant',name:'AES_256_CBC'},'27':{type:'mod',name:'error'},'32':{type:'variant',name:'StreamEof'},'1749':{type:'struct',name:'X509Name'},'4700':{type:'struct',name:'PKey'},'3532':{type:'variant',name:'SHA384'},'1774':{type:'variant',name:'X509CertSignatureFailure'},'3530':{type:'variant',name:'SHA224'},'4361':{type:'mod',name:'pkey'},'1793':{type:'variant',name:'X509InvalidPurpose'},'5795':{type:'mod',name:'symm'},'1815':{type:'variant',name:'X509ExcludedViolation'},'3521':{type:'mod',name:'hash'},'3534':{type:'typedef',name:'EVP_MD_CTX'},'5918':{type:'variant',name:'RC4_128'},'1797':{type:'variant',name:'X509AkidSkidMismatch'},'4655':{type:'variant',name:'PKCS1v15'},'1789':{type:'variant',name:'X509CertChainTooLong'},'5914':{type:'variant',name:'AES_128_ECB'},'5802':{type:'typedef',name:'EVP_CIPHER_CTX'},'1767':{type:'variant',name:'Multiline'},'3529':{type:'variant',name:'SHA1'},'3047':{type:'struct',name:'SslStream'},'1775':{type:'variant',name:'X509CrlSignatureFailure'},'1780':{type:'variant',name:'X509ErrorInCertNotBeforeField'},'1806':{type:'variant',name:'X509KeyusageNoDigitalSignature'},'1807':{type:'variant',name:'X509ProxyCertificatesNotAllowed'},'5910':{type:'enum',name:'Mode'},'1805':{type:'variant',name:'X509ProxyPathLengthExceeded'},'3533':{type:'variant',name:'SHA512'},'1771':{type:'variant',name:'X509UnableToDecryptCertSignature'},'1777':{type:'variant',name:'X509CertHasExpired'},'1796':{type:'variant',name:'X509SubjectIssuerMismatch'},'1783':{type:'variant',name:'X509ErrorInCrlNextUpdateField'},'3528':{type:'variant',name:'MD5'},'4100':{type:'mod',name:'pkcs5'},'5912':{type:'variant',name:'Decrypt'},'4648':{type:'enum',name:'Role'},'3904':{type:'fn',name:'HMAC'},'1821':{type:'variant',name:'X509ApplicationVerification'},'5971':{type:'struct',name:'Crypter'},'1785':{type:'variant',name:'X509DepthZeroSelfSignedCert'},'1791':{type:'variant',name:'X509InvalidCA'},'3611':{type:'fn',name:'evpmd'},'1779':{type:'variant',name:'X509CrlHasExpired'},'1811':{type:'variant',name:'X509DifferentCrlScope'},'1712':{type:'struct',name:'X509'},'1269':{type:'variant',name:'SslVerifyNone'},'86':{type:'enum',name:'OpensslError'},'1787':{type:'variant',name:'X509UnableToGetIssuerCertLocally'}};